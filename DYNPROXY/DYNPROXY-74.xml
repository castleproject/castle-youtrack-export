<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Major</value>
    </field>
    <field name="Type">
      <value>Bug</value>
    </field>
    <field name="State">
      <value>Fixed</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>No subsystem</value>
    </field>
    <field name="Fix versions" />
    <field name="Affected versions" />
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>74</value>
    </field>
    <field name="summary">
      <value>CreateInterfaceProxyWithoutTarget  fails with interface containing member with 'out IntPtr'</value>
    </field>
    <field name="description">
      <value>Testcase:

public interface IFoo
{
	int GetBar(out IntPtr parameter);
}

public class Test
{
	public void TestMethod()
	{
		MockRepository mocks = new MockRepository();
		mocks.DynamicMock&lt;IFoo&gt;(); // &lt;-- fails
	}
}

This fails with this exception:

Stacktrace and Exception:

Test method UnitTestProject.MenuItemTests.MenuItemTest.MenuItemCallback threw exception:  System.ArgumentException: Type System.IntPtr could not be converted to a OpCode.

Castle.DynamicProxy.Generators.Emitters.OpCodeUtil.EmitLoadIndirectOpCodeForType(ILGenerator gen, Type type)
Castle.DynamicProxy.Generators.Emitters.SimpleAST.IndirectReference.LoadReference(ILGenerator gen)
Castle.DynamicProxy.Generators.Emitters.ArgumentsUtil.EmitLoadOwnerAndReference(Reference reference, ILGenerator il)
Castle.DynamicProxy.Generators.Emitters.SimpleAST.ReferencesToObjectArrayExpression.Emit(IMemberEmitter member, ILGenerator gen)
Castle.DynamicProxy.Generators.Emitters.SimpleAST.NewInstanceExpression.Emit(IMemberEmitter member, ILGenerator gen)
Castle.DynamicProxy.Generators.Emitters.SimpleAST.AssignStatement.Emit(IMemberEmitter member, ILGenerator gen)
Castle.DynamicProxy.Generators.Emitters.CodeBuilders.AbstractCodeBuilder.Generate(IMemberEmitter member, ILGenerator il)
Castle.DynamicProxy.Generators.Emitters.MethodEmitter.Generate()
Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter.EnsureBuildersAreInAValidState()
Castle.DynamicProxy.Generators.Emitters.AbstractTypeEmitter.BuildType()
Castle.DynamicProxy.Generators.InterfaceProxyWithTargetGenerator.GenerateCode(Type proxyTargetType, Type[] interfaces, ProxyGenerationOptions options)
Castle.DynamicProxy.DefaultProxyBuilder.CreateInterfaceProxyTypeWithoutTarget(Type theInterface, Type[] interfaces, ProxyGenerationOptions options)
Castle.DynamicProxy.ProxyGenerator.CreateInterfaceProxyTypeWithoutTarget(Type theInterface, Type[] interfaces, ProxyGenerationOptions options)
Castle.DynamicProxy.ProxyGenerator.CreateInterfaceProxyWithoutTarget(Type theInterface, Type[] interfaces, ProxyGenerationOptions options, IInterceptor[] interceptors)
Castle.DynamicProxy.ProxyGenerator.CreateInterfaceProxyWithoutTarget(Type theInterface, Type[] interfaces, IInterceptor[] interceptors)
Rhino.Mocks.MockRepository.MockInterface(CreateMockState mockStateFactory, Type type, Type[] extras)
Rhino.Mocks.MockRepository.CreateMockObject(Type type, CreateMockState factory, Type[] extras, Object[] argumentsForConstructor)
Rhino.Mocks.MockRepository.DynamicMock[T](Object[] argumentsForConstructor)
</value>
    </field>
    <field name="created">
      <value>1205335291000</value>
    </field>
    <field name="updated">
      <value>1235007461000</value>
    </field>
    <field name="reporterName">
      <value>srijken</value>
    </field>
    <field name="updaterName">
      <value>srijken</value>
    </field>
    <field name="resolved">
      <value>1235007420000</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
    <comment author="jonorossi" text="This is an old issues.&#xA;&#xA;RhinoMocksTestCase.CanProxyMethodWithOutIntPtrParamter() provides a test for this functionality." created="1235007461000" />
    <comment author="jonorossi" text="* '''Resolution''' set to ''Fixed''.&#xD;&#xA;* '''Status''' changed from ''Open'' to ''Resolved''.&#xD;&#xA;" created="1235007420000" />
  </issue>
</issues>