<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Major</value>
    </field>
    <field name="Type">
      <value>Bug</value>
    </field>
    <field name="State">
      <value>Fixed</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>Proxy generation</value>
    </field>
    <field name="Fix versions">
      <value>3.1</value>
    </field>
    <field name="Affected versions" />
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>174</value>
    </field>
    <field name="summary">
      <value>Unable to cast object of type 'System.Collections.ObjectModel.ReadOnlyCollection`1[System.Reflection.CustomAttributeTypedArgument]' to type 'System.Array'.</value>
    </field>
    <field name="description">
      <value>Version: 3.0.0.0 (latest)

Unit-Test:

[AttributeWithStringArrayArgument(IncludeColumns = new[] { "Test" })]
public interface IHasAttributeWithStringArray {
}

[Test]
[Bug("DYNPROXY-NEW")]
public void Can_clone_attributes_with_string_types() {
     generator.CreateInterfaceProxyWithoutTarget(typeof(IHasAttributeWithStringArray));
}


Exception:
System.InvalidCastException : Das Objekt des Typs "System.Collections.ObjectModel.ReadOnlyCollection`1[System.Reflection.CustomAttributeTypedArgument]" kann nicht in Typ "System.Array" umgewandelt werden.
TearDown : System.NotSupportedException : Der Typ "Castle.Proxies.IHasAttributeWithStringArrayProxy" wurde noch nicht abgeschlossen.
bei System.Reflection.Emit.CustomAttributeBuilder.EmitValue(BinaryWriter writer, Type type, Object value)
bei System.Reflection.Emit.CustomAttributeBuilder.InitCustomAttributeBuilder(ConstructorInfo con, Object[] constructorArgs, PropertyInfo[] namedProperties, Object[] propertyValues, FieldInfo[] namedFields, Object[] fieldValues)
bei Castle.DynamicProxy.Internal.AttributeUtil.CreateBuilder(CustomAttributeData attribute) in AttributeUtil.cs: line 68.
bei Castle.DynamicProxy.Internal.AttributeUtil.&lt;GetNonInheritableAttributes&gt;d__0.MoveNext() in AttributeUtil.cs: line 163.
bei Castle.DynamicProxy.Contributors.ProxyInstanceContributor.Generate(ClassEmitter class, ProxyGenerationOptions options) in ProxyInstanceContributor.cs: line 54.
bei Castle.DynamicProxy.Generators.InterfaceProxyWithoutTargetGenerator.GenerateType(String typeName, Type proxyTargetType, Type[] interfaces, INamingScope namingScope) in InterfaceProxyWithoutTargetGenerator.cs: line 75.
bei Castle.DynamicProxy.Generators.InterfaceProxyWithTargetGenerator.&lt;&gt;c__DisplayClass1.&lt;GenerateCode&gt;b__0(String n, INamingScope s) in InterfaceProxyWithTargetGenerator.cs: line 63.
bei Castle.DynamicProxy.Generators.BaseProxyGenerator.ObtainProxyType(CacheKey cacheKey, Func`3 factory) in BaseProxyGenerator.cs: line 416.
bei Castle.DynamicProxy.Generators.InterfaceProxyWithTargetGenerator.GenerateCode(Type proxyTargetType, Type[] interfaces, ProxyGenerationOptions options) in InterfaceProxyWithTargetGenerator.cs: line 63.
bei Castle.DynamicProxy.DefaultProxyBuilder.CreateInterfaceProxyTypeWithoutTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options) in DefaultProxyBuilder.cs: line 108.
bei Castle.DynamicProxy.ProxyGenerator.CreateInterfaceProxyTypeWithoutTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options) in ProxyGenerator.cs: line 1594.
bei Castle.DynamicProxy.ProxyGenerator.CreateInterfaceProxyWithoutTarget(Type interfaceToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, IInterceptor[] interceptors) in ProxyGenerator.cs: line 873.
bei Castle.DynamicProxy.ProxyGenerator.CreateInterfaceProxyWithoutTarget(Type interfaceToProxy, IInterceptor[] interceptors) in ProxyGenerator.cs: line 766.
bei Castle.DynamicProxy.Tests.CanDefineAdditionalCustomAttributes.Can_clone_attributes_with_string_types() in CanDefineAdditionalCustomAttributes.cs: line 49.
--TearDown

</value>
    </field>
    <field name="created">
      <value>1342520005490</value>
    </field>
    <field name="updated">
      <value>1407822235387</value>
    </field>
    <field name="reporterName">
      <value>m.mitterer</value>
    </field>
    <field name="updaterName">
      <value>jonorossi</value>
    </field>
    <field name="resolved">
      <value>1342557177135</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
  </issue>
</issues>