<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Show-stopper</value>
    </field>
    <field name="Type">
      <value>Bug</value>
    </field>
    <field name="State">
      <value>Fixed</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>Startable</value>
    </field>
    <field name="Fix versions" />
    <field name="Affected versions" />
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>31</value>
    </field>
    <field name="summary">
      <value>StartableFacility.CheckWaitingList() could be called recursively</value>
    </field>
    <field name="description">
      <value>The current implemetation of method CheckWaitingList first calls Start(key) method and only after that removes handler from a waiting list. If during start a component register another component the CheckWaitingList will be called recursivly with unchanged waiting list so it will continue recursion until stack overfrlow. Here is some version that works:

namespace Lehman.Lens.ShellImpl
{
	public class ShellStartableFacility : AbstractFacility
	{
...
		private void CheckWaitingList()
		{
			IHandler[] handlers = (IHandler[]) waitList.ToArray( typeof(IHandler) );
			IList validList = new ArrayList();
			foreach(IHandler handler in handlers)
			{
				if (handler.CurrentState == HandlerState.Valid)
				{
					waitList.Remove(handler);
					validList.Add(handler);
				}
			}
			foreach(IHandler handler in validList)
			{
				Start( handler.ComponentModel.Name );
			}
		}
	}
...
}
</value>
    </field>
    <field name="created">
      <value>1135857685000</value>
    </field>
    <field name="updated">
      <value>1162411931000</value>
    </field>
    <field name="reporterName">
      <value>yvm</value>
    </field>
    <field name="updaterName">
      <value>yvm</value>
    </field>
    <field name="resolved">
      <value>1282140980620</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
  </issue>
</issues>