<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Major</value>
    </field>
    <field name="Type">
      <value>Bug</value>
    </field>
    <field name="State">
      <value>Fixed</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>AutomaticTransactionManagement</value>
    </field>
    <field name="Fix versions" />
    <field name="Affected versions" />
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>75</value>
    </field>
    <field name="summary">
      <value>AR says "Database is locked" after a TransactionException has been thrown</value>
    </field>
    <field name="description">
      <value>I'm having a testcase where I check that the optimistic locking (with a version field) is working. The test case look something like this.

IUser user2 = serv.GetUserByName("testuser3");
IUser user3 = serv.GetUserByName("testuser3");
user2.Domain = "otherdomain";
user3.Domain = "newdomain";

serv.Save(user2);

// Thanks to optimistic locking, saving user3 should now throw an exception.
bool flag = false;
try
{
    serv.Save(user3);
}
catch (TransactionException)
{
    flag = true;
}
Assert.IsTrue(flag);

This all works fine, but the next transaction that starts after this test case has been running, comes to a complete standstill. After timing out it says "Database is locked". It seems like some resource (database connection) is not released when a TransactionException is being thrown. In SQLite (which can only have one active transaction at a time), this results in a deadlock, while in other databases, with better locking behaviour this probably can pass undetected.

This test case used to work a month ago. It must be a recent checkin that makes it fail.
</value>
    </field>
    <field name="created">
      <value>1168415106000</value>
    </field>
    <field name="updated">
      <value>1170530537000</value>
    </field>
    <field name="reporterName">
      <value>jpersson</value>
    </field>
    <field name="updaterName">
      <value>jpersson</value>
    </field>
    <field name="resolved">
      <value>1282141173213</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
  </issue>
</issues>