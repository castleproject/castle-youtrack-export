<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Normal</value>
    </field>
    <field name="Type">
      <value>Feature</value>
    </field>
    <field name="State">
      <value>Fixed</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>NHibernate</value>
    </field>
    <field name="Fix versions" />
    <field name="Affected versions">
      <value>Beta3</value>
    </field>
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>52</value>
    </field>
    <field name="summary">
      <value>Factory-Specific IInterceptors</value>
    </field>
    <field name="description">
      <value>I have the opportunity to use parts of the Castle framework in my current
project at work. We have the need for factory-specific interceptors. I sought
authorization to submit to you the code that I implemented in the
NHibernateIntegration facility for this purpose (and the tests that accompany
it). In that spirit, I have included a .patch file with the changes to the
facility. I have built the facility from Microsoft Visual Studio 2003 and
using NAnt; all builds succeed.

USAGE
To use a factory-specific interceptor, include a component with an id of

    nhibernate.session.interceptor.&lt;alias_name&gt;

where &lt;alias_name&gt; is the alias used for the factory that you would like
the interceptor to act upon.

SOURCE CHANGES
- Updated references for the NHibernateIntegration and
  NHibernateIntegration.Tests projects so that they use libraries from the
  SharedLibs folder and the new Castle.Core library.
- Created the TestIntercepter class in the Common subdirectory of the
  NHibernateIntegration.Tests project to use in the tests.
- Added a third session factory to the facilityconfig.xml file with an id of
  "intercepted" for use with testing factory-specific interceptors.
- Created two tests in the Internals.SessionManagerTestCase test fixture
  named "NonInterceptedSession" and "InterceptedSessionByConfiguration".
- Modified the Internal.DefaultSessionManager.CreateSession(string) method
  to look for a factory-specific interceptor given the convention used in
  the USAGE block.</value>
    </field>
    <field name="created">
      <value>1158422756000</value>
    </field>
    <field name="updated">
      <value>1162411616000</value>
    </field>
    <field name="reporterName">
      <value>somnambulist</value>
    </field>
    <field name="updaterName">
      <value>somnambulist</value>
    </field>
    <field name="resolved">
      <value>1282141031510</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
  </issue>
</issues>