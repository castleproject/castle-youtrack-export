<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Major</value>
    </field>
    <field name="Type">
      <value>Bug</value>
    </field>
    <field name="State">
      <value>Fixed</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>NHibernate</value>
    </field>
    <field name="Fix versions">
      <value>Beta3</value>
    </field>
    <field name="Affected versions" />
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>16</value>
    </field>
    <field name="summary">
      <value>SessionManager storage approaches</value>
    </field>
    <field name="description">
      <value>from http://castleproject.org/index.php?title=Facility:NHibernate#Troubleshooting:

Session Manager can't store NHibernate session at thread level when in ASP.NET, since a single HttpRequest is not guaranteed to be serviced by the same thread. See the NHibernate FAQ (http://wiki.nhibernate.org/display/NH/Frequently+Asked+Questions#FrequentlyAskedQuestions-gq6).

My web application broke down when accessed by more than one user at a time, until I modified SessionManager and NHibernateTransactionManager to use HttpContext.Current.Items to store data.

--Paolo 08:52, 28 Sep 2005 (EDT) 
</value>
    </field>
    <field name="created">
      <value>1127887187000</value>
    </field>
    <field name="updated">
      <value>1162412098000</value>
    </field>
    <field name="reporterName">
      <value>hammett</value>
    </field>
    <field name="updaterName">
      <value>hammett</value>
    </field>
    <field name="resolved">
      <value>1282140966088</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
  </issue>
</issues>