<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Major</value>
    </field>
    <field name="Type">
      <value>Bug</value>
    </field>
    <field name="State">
      <value>Won't fix</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>FactorySupport</value>
    </field>
    <field name="Fix versions">
      <value>Future</value>
    </field>
    <field name="Affected versions" />
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>90</value>
    </field>
    <field name="summary">
      <value>FactorySupport facility throws AmbiguousMatchException</value>
    </field>
    <field name="description">
      <value>Here's the situation, I have a FSDirectory class with no suitable constructor which exposes a static Create method with two overloads:

Code:
public static FSDirectory GetDirectory(FileInfo file, bool create);
public static FSDirectory GetDirectory(string path, bool create);

I need to call one of them to instantiate a FSDirectory class, so I've configured Windsor like this:

Code:
&lt;component id="FileSystemDirectory"
               type="Lucene.Net.Store.FSDirectory, Lucene.Net"
               factoryId="FileSystemDirectory"
               factoryCreate="GetDirectory"&gt;
    &lt;parameters&gt;
        &lt;path&gt;somePath&lt;/path&gt;
        &lt;create&gt;true&lt;/create&gt;
    &lt;/parameters&gt;
&lt;/component&gt;

First, I don't know if using as a component factory the same component may introduce circular dependencies (the factory methods are static, but how does Windsor know that in order to call the Create method it doesn't need to instantiate the component?), however I don't think this is the problem, since it looks more like Windsor doesn't know which of the two Create methods to call, in fact I get an AmbiguousMatchException exception. </value>
    </field>
    <field name="created">
      <value>1182786365000</value>
    </field>
    <field name="updated">
      <value>1241446214000</value>
    </field>
    <field name="reporterName">
      <value>simone_b</value>
    </field>
    <field name="updaterName">
      <value>simone_b</value>
    </field>
    <field name="resolved">
      <value>1241446200000</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
    <comment author="ayenderahien" text="Trying to do overload resolution is not something that we want to do here, there are too many potential complexities involved.&#xA;I suggest creating a second class, with only a single overload, that will handle that." created="1241446210000" />
    <comment author="ayenderahien" text="* '''Resolution''' set to ''Won't Fix''.&#xD;&#xA;* '''Status''' changed from ''Open'' to ''Resolved''.&#xD;&#xA;" created="1241446200000" />
    <comment author="ayenderahien" text="* '''Status''' changed from ''Resolved'' to ''Closed''.&#xD;&#xA;" created="1241446200000" />
  </issue>
</issues>