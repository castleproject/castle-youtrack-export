<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Major</value>
    </field>
    <field name="Type">
      <value>Bug</value>
    </field>
    <field name="State">
      <value>Incomplete</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>AutomaticTransactionManagement</value>
    </field>
    <field name="Fix versions" />
    <field name="Affected versions" />
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>68</value>
    </field>
    <field name="summary">
      <value>when exception occured in two method marked [Transaction] ,the previous operation cannot rollback</value>
    </field>
    <field name="description">
      <value>my code like this:


[Transactional]
public class OrderService : IOrderService
{
       [Transaction(TransactionMode.Requires)]
       public virtual  void CreateOrder(Order order)
       {
           order.Save();
       }

       [Transaction(TransactionMode.Requires)]
       public virtual void CreateOrderWithException(Order order)
       {
           CreateOrder(order);

           throw new Exception("The method or operation is not implemented.");
       }
}


when I execute the CreateOrderWithException method that throw a
exception,but I find the order is still persisted.

the attachment is my project. 
the testcase is TestService.TestAutoTransaction();


</value>
    </field>
    <field name="created">
      <value>1166096529000</value>
    </field>
    <field name="updated">
      <value>1166519843000</value>
    </field>
    <field name="reporterName">
      <value>karron</value>
    </field>
    <field name="updaterName">
      <value>karron</value>
    </field>
    <field name="resolved">
      <value>1282141063948</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
  </issue>
</issues>