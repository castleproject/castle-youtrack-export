<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Normal</value>
    </field>
    <field name="Type">
      <value>Feature</value>
    </field>
    <field name="State">
      <value>Won't fix</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>Core</value>
    </field>
    <field name="Fix versions" />
    <field name="Affected versions" />
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>100</value>
    </field>
    <field name="summary">
      <value>Explore: Discovering HTTP #1: The Accept header</value>
    </field>
    <field name="description">
      <value>I read this article(1) and wanted to make sure others on the team saw it. I am not sure how it would or would not fit into the MonoRail system. I am currently thinking attributes? or maybe something using delegates. looking at the code in the article maybe delegates.

Attributes:
[RespondTo(Type.Html)]
public void Action()
{
    //Do Stuff
}
(No, this doesn't feel write)


Delegates:
public void Action()
{
    this.RespondTo(
        [RespondTo(Type.Html)]delegate(ResponseType type){},
        [RespondTo(Type.Rss)]delegate(ResponseType type){}
    );
    //Or
    this.RespondTo(
        [RespondTo(Type.Rss)]delegate(Controller controller){}
    )
    //Or ????
}

I feel forced into a Switch which doesn't seem like a terribly good idea.

Anyways mostly food for thought.

Dru

1. http://www.loudthinking.com/arc/000572.html</value>
    </field>
    <field name="created">
      <value>1142177556000</value>
    </field>
    <field name="updated">
      <value>1162414250000</value>
    </field>
    <field name="reporterName">
      <value>dsellers</value>
    </field>
    <field name="updaterName">
      <value>dsellers</value>
    </field>
    <field name="resolved">
      <value>1282143398948</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
  </issue>
</issues>