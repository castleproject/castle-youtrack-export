<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Major</value>
    </field>
    <field name="Type">
      <value>Bug</value>
    </field>
    <field name="State">
      <value>Obsolete</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>ViewEngine - Brail</value>
    </field>
    <field name="Fix versions" />
    <field name="Affected versions">
      <value>2.0</value>
    </field>
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>519</value>
    </field>
    <field name="summary">
      <value>Request parameters take precedence over CaptureFor content when using layouts</value>
    </field>
    <field name="description">
      <value>When using layouts request parameters take precedence over content used inside CaptureFor component. Here's a sample:

&lt;!-- default.brail --&gt;
&lt;html&gt;
&lt;head&gt;${?javascript}&lt;/head&gt;
&lt;body&gt;${?ChildOutput}&lt;/body&gt;
&lt;/html&gt;
&lt;!-- end of default.brail --&gt;


&lt;!-- index.brail --&gt;
&lt;% component CaptureFor, { @id: 'javascript' }: %&gt;
    &lt;script type="text/javascript" src="some_specific_script_to_index.js"&gt;&lt;/script&gt;
&lt;% end %&gt;
&lt;p&gt;Hello world from my first action.&lt;/p&gt;
&lt;!-- end of index.brail --&gt;

Invoke the index action with: http://SERVER:PORT/home/index.castle?javascript=SOME_XSS

"SOME_XSS" is inserted in the head section instead of the content defined inside the CaptureFor component.

The affected method is Castle.MonoRail.Views.Brail.BrailBase.GetParameterInternal (http://mvccontrib.googlecode.com/svn/trunk/src/MvcContrib.BrailViewEngine/BrailBase.cs)

It first checks for the properties in the current page and then in the parent:

if (properties.Contains(name))
    return new ParameterSearch(properties[name], true);
if (parent != null)
    return parent.GetParameterInternal(name);


Inverting the order of the check corrects the problem:

if (parent != null)
    return parent.GetParameterInternal(name);
if (properties.Contains(name))
    return new ParameterSearch(properties[name], true);


Unfortunately I am not well acquainted with the Brail view engine code base so I don't know if this change would have some side effects. I would appreciate if someone more familiar could shed some light on the issue.

Kind regards,
Darin</value>
    </field>
    <field name="created">
      <value>1235216279000</value>
    </field>
    <field name="updated">
      <value>1407819381637</value>
    </field>
    <field name="reporterName">
      <value>dimitrod2</value>
    </field>
    <field name="updaterName">
      <value>jonorossi</value>
    </field>
    <field name="resolved">
      <value>1407819381634</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
    <comment author="dimitrod2" text="* '''Description''' changed from:&#xD;&#xA;{quote}&#xD;&#xA;When using layouts request parameters take precedence over content used inside CaptureFor component. Here's a sample:&#xD;&#xA;&#xD;&#xA;&lt;!-- default.brail --&gt;&#xD;&#xA;&lt;html&gt;&#xD;&#xA;&lt;head&gt;${?javascript}&lt;/head&gt;&#xD;&#xA;&lt;body&gt;${?ChildOutput}&lt;/body&gt;&#xD;&#xA;&lt;/html&gt;&#xD;&#xA;&lt;!-- end of default.brail --&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;!-- index.brail --&gt;&#xD;&#xA;&lt;% component CaptureFor, { @id: 'javascript' }: %&gt;&#xD;&#xA;    &lt;script type=&quot;text/javascript&quot;&#xD;&#xA;src=&quot;some_specific_script_to_index.js&quot;&gt;&lt;/script&gt;&#xD;&#xA;&lt;% end %&gt;&#xD;&#xA;&lt;p&gt;Hello world from my first action.&lt;/p&gt;&#xD;&#xA;&lt;!-- end of index.brail --&gt;&#xD;&#xA;&#xD;&#xA;Invoke the index action with: http://SERVER:PORT/home/index.castle?javascript=SOME_XSS&#xD;&#xA;&#xD;&#xA;&quot;SOME_XSS&quot; is inserted in the head section instead of the content defined inside the CaptureFor component.&#xD;&#xA;&#xD;&#xA;The affected method is Castle.MonoRail.Views.Brail.BrailBase.GetParameterInternal (http://mvccontrib.googlecode.com/svn/trunk/src/MvcContrib.BrailViewEngine/BrailBase.cs)&#xD;&#xA;&#xD;&#xA;It first checks for the properties in the current page and then in the parent:&#xD;&#xA;&#xD;&#xA;if (properties.Contains(name))&#xD;&#xA;    return new ParameterSearch(properties[name], true);&#xD;&#xA;if (parent != null)&#xD;&#xA;    return parent.GetParameterInternal(name);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Inverting the order of the check corrects the problem:&#xD;&#xA;&#xD;&#xA;if (parent != null)&#xD;&#xA;    return parent.GetParameterInternal(name);&#xD;&#xA;if (properties.Contains(name))&#xD;&#xA;    return new ParameterSearch(properties[name], true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Unfortunately I am not well acquainted with the Brail view engine code base so I don't know if this change would have some side effects. I would appreciate if someone more familiar could shed some light on the issue.&#xD;&#xA;&#xD;&#xA;Kind regards,&#xD;&#xA;Darin&#xD;&#xA;{quote}&#xD;&#xA;to:&#xD;&#xA;{quote}&#xD;&#xA;When using layouts request parameters take precedence over content used inside CaptureFor component. Here's a sample:&#xD;&#xA;&#xD;&#xA;&lt;!-- default.brail --&gt;&#xD;&#xA;&lt;html&gt;&#xD;&#xA;&lt;head&gt;${?javascript}&lt;/head&gt;&#xD;&#xA;&lt;body&gt;${?ChildOutput}&lt;/body&gt;&#xD;&#xA;&lt;/html&gt;&#xD;&#xA;&lt;!-- end of default.brail --&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;!-- index.brail --&gt;&#xD;&#xA;&lt;% component CaptureFor, { @id: 'javascript' }: %&gt;&#xD;&#xA;    &lt;script type=&quot;text/javascript&quot; src=&quot;some_specific_script_to_index.js&quot;&gt;&lt;/script&gt;&#xD;&#xA;&lt;% end %&gt;&#xD;&#xA;&lt;p&gt;Hello world from my first action.&lt;/p&gt;&#xD;&#xA;&lt;!-- end of index.brail --&gt;&#xD;&#xA;&#xD;&#xA;Invoke the index action with: http://SERVER:PORT/home/index.castle?javascript=SOME_XSS&#xD;&#xA;&#xD;&#xA;&quot;SOME_XSS&quot; is inserted in the head section instead of the content defined inside the CaptureFor component.&#xD;&#xA;&#xD;&#xA;The affected method is Castle.MonoRail.Views.Brail.BrailBase.GetParameterInternal (http://mvccontrib.googlecode.com/svn/trunk/src/MvcContrib.BrailViewEngine/BrailBase.cs)&#xD;&#xA;&#xD;&#xA;It first checks for the properties in the current page and then in the parent:&#xD;&#xA;&#xD;&#xA;if (properties.Contains(name))&#xD;&#xA;    return new ParameterSearch(properties[name], true);&#xD;&#xA;if (parent != null)&#xD;&#xA;    return parent.GetParameterInternal(name);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Inverting the order of the check corrects the problem:&#xD;&#xA;&#xD;&#xA;if (parent != null)&#xD;&#xA;    return parent.GetParameterInternal(name);&#xD;&#xA;if (properties.Contains(name))&#xD;&#xA;    return new ParameterSearch(properties[name], true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Unfortunately I am not well acquainted with the Brail view engine code base so I don't know if this change would have some side effects. I would appreciate if someone more familiar could shed some light on the issue.&#xD;&#xA;&#xD;&#xA;Kind regards,&#xD;&#xA;Darin&#xD;&#xA;{quote}&#xD;&#xA;" created="1235216280000" />
    <comment author="dimitrod2" text="* '''Description''' changed from:&#xD;&#xA;{quote}&#xD;&#xA;When using layouts request parameters take precedence over content used inside CaptureFor component. Here's a sample:&#xD;&#xA;&#xD;&#xA;&lt;!-- default.brail --&gt;&#xD;&#xA;&lt;html&gt;&#xD;&#xA;&lt;head&gt;${?javascript}&lt;/head&gt;&#xD;&#xA;&lt;body&gt;${?ChildOutput}&lt;/body&gt;&#xD;&#xA;&lt;/html&gt;&#xD;&#xA;&lt;!-- end of default.brail --&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;!-- index.brail --&gt;&#xD;&#xA;&lt;% component CaptureFor, { @id: 'javascript' }: %&gt;&#xD;&#xA;    &lt;script type=&quot;text/javascript&quot; src=&quot;some_specific_script_to_index.js&quot;&gt;&lt;/script&gt;&#xD;&#xA;&lt;% end %&gt;&#xD;&#xA;&lt;p&gt;Hello world from my first action.&lt;/p&gt;&#xD;&#xA;&lt;!-- end of index.brail --&gt;&#xD;&#xA;&#xD;&#xA;Invoke the index action with: http://SERVER:PORT/home/index.castle?javascript=SOME_XSS&#xD;&#xA;&#xD;&#xA;&quot;SOME_XSS&quot; is inserted in the head section instead of the content defined inside the CaptureFor component.&#xD;&#xA;&#xD;&#xA;The affected method is Castle.MonoRail.Views.Brail.BrailBase.GetParameterInternal (http://mvccontrib.googlecode.com/svn/trunk/src/MvcContrib.BrailViewEngine/BrailBase.cs)&#xD;&#xA;&#xD;&#xA;It first checks for the properties in the current page and then in the parent:&#xD;&#xA;&#xD;&#xA;if (properties.Contains(name))&#xD;&#xA;    return new ParameterSearch(properties[name], true);&#xD;&#xA;if (parent != null)&#xD;&#xA;    return parent.GetParameterInternal(name);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Inverting the order of the check corrects the problem:&#xD;&#xA;&#xD;&#xA;if (parent != null)&#xD;&#xA;    return parent.GetParameterInternal(name);&#xD;&#xA;if (properties.Contains(name))&#xD;&#xA;    return new ParameterSearch(properties[name], true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Unfortunately I am not well acquainted with the Brail view engine code base so I don't know if this change would have some side effects. I would appreciate if someone more familiar could shed some light on the issue.&#xD;&#xA;&#xD;&#xA;Kind regards,&#xD;&#xA;Darin&#xD;&#xA;{quote}&#xD;&#xA;to:&#xD;&#xA;{quote}&#xD;&#xA;test&#xD;&#xA;{quote}&#xD;&#xA;" created="1235397660000" />
    <comment author="dimitrod2" text="* '''Description''' changed from:&#xD;&#xA;{quote}&#xD;&#xA;test&#xD;&#xA;{quote}&#xD;&#xA;to:&#xD;&#xA;{quote}&#xD;&#xA;When using layouts request parameters take precedence over content used inside CaptureFor component. Here's a sample:&#xD;&#xA;&#xD;&#xA;&lt;!-- default.brail --&gt;&#xD;&#xA;&lt;html&gt;&#xD;&#xA;&lt;head&gt;${?javascript}&lt;/head&gt;&#xD;&#xA;&lt;body&gt;${?ChildOutput}&lt;/body&gt;&#xD;&#xA;&lt;/html&gt;&#xD;&#xA;&lt;!-- end of default.brail --&gt;&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;&lt;!-- index.brail --&gt;&#xD;&#xA;&lt;% component CaptureFor, { @id: 'javascript' }: %&gt;&#xD;&#xA;    &lt;script type=&quot;text/javascript&quot; src=&quot;some_specific_script_to_index.js&quot;&gt;&lt;/script&gt;&#xD;&#xA;&lt;% end %&gt;&#xD;&#xA;&lt;p&gt;Hello world from my first action.&lt;/p&gt;&#xD;&#xA;&lt;!-- end of index.brail --&gt;&#xD;&#xA;&#xD;&#xA;Invoke the index action with: http://SERVER:PORT/home/index.castle?javascript=SOME_XSS&#xD;&#xA;&#xD;&#xA;&quot;SOME_XSS&quot; is inserted in the head section instead of the content defined inside the CaptureFor component.&#xD;&#xA;&#xD;&#xA;The affected method is Castle.MonoRail.Views.Brail.BrailBase.GetParameterInternal (http://mvccontrib.googlecode.com/svn/trunk/src/MvcContrib.BrailViewEngine/BrailBase.cs)&#xD;&#xA;&#xD;&#xA;It first checks for the properties in the current page and then in the parent:&#xD;&#xA;&#xD;&#xA;if (properties.Contains(name))&#xD;&#xA;    return new ParameterSearch(properties[name], true);&#xD;&#xA;if (parent != null)&#xD;&#xA;    return parent.GetParameterInternal(name);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Inverting the order of the check corrects the problem:&#xD;&#xA;&#xD;&#xA;if (parent != null)&#xD;&#xA;    return parent.GetParameterInternal(name);&#xD;&#xA;if (properties.Contains(name))&#xD;&#xA;    return new ParameterSearch(properties[name], true);&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;Unfortunately I am not well acquainted with the Brail view engine code base so I don't know if this change would have some side effects. I would appreciate if someone more familiar could shed some light on the issue.&#xD;&#xA;&#xD;&#xA;Kind regards,&#xD;&#xA;Darin&#xD;&#xA;{quote}&#xD;&#xA;" created="1235397720000" />
    <comment author="jsimons" text="* '''Version Affected''' set to ''2.0''.&#xD;&#xA;" created="1278808260000" />
  </issue>
</issues>