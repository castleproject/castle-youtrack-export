<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Major</value>
    </field>
    <field name="Type">
      <value>Feature</value>
    </field>
    <field name="State">
      <value>Fixed</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>Helpers</value>
    </field>
    <field name="Fix versions">
      <value>Future</value>
    </field>
    <field name="Affected versions">
      <value>Future</value>
    </field>
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>392</value>
    </field>
    <field name="summary">
      <value>FormHelper.LiteralFor feature addition</value>
    </field>
    <field name="description">
      <value>There isn't an easy way to use Form Helper's builtin ObtainValue without any additional markup. So if you want to simply have a value that is in the params collection wrapped by a span and the target (name) has been passed to a view component, this would be handy.

in mymainview.brail:
&lt;?brail component mycomponent,{@mytarget:'targetname'} ?&gt;

in mycomponent.brail
&lt;span id='${mytarget}_additionalviewcomponentsuffix'&gt;&lt;?brail output Form.LiteralFor("${mytarget}") ?&gt;&lt;/span&gt;

I have been using this a while and it is handy.

</value>
    </field>
    <field name="created">
      <value>1199897771000</value>
    </field>
    <field name="updated">
      <value>1244676977000</value>
    </field>
    <field name="reporterName">
      <value>mnichols</value>
    </field>
    <field name="updaterName">
      <value>mnichols</value>
    </field>
    <field name="resolved">
      <value>1282145482370</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
    <comment author="kenegozi" text="* '''Status''' changed from ''Resolved'' to ''Closed''.&#xD;&#xA;" created="1244676960000" />
  </issue>
</issues>