<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Major</value>
    </field>
    <field name="Type">
      <value>Bug</value>
    </field>
    <field name="State">
      <value>Can't Reproduce</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>No subsystem</value>
    </field>
    <field name="Fix versions">
      <value>Release Candidate 1</value>
    </field>
    <field name="Affected versions">
      <value>Release Candidate 1</value>
    </field>
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>110</value>
    </field>
    <field name="summary">
      <value>Integration with AR makes the session start on each request</value>
    </field>
    <field name="description">
      <value>Matt Berther reported this on the thread "[Castle-users] ActiveRecord/MonoRail and sessions"
His global.asax

&lt;%@ Import namespace="Castle.ActiveRecord"%&gt;
&lt;%@ Import namespace="Castle.ActiveRecord.Framework"%&gt;
&lt;%@ Import namespace="Website.Core"%&gt;
&lt;%@ Application Language="C#" %&gt;

&lt;script runat="server"&gt;

   void Application_Start(object sender, EventArgs e)
   {
       log4net.Config.XmlConfigurator.Configure();
       IConfigurationSource source =
(IConfigurationSource)ConfigurationSettings.GetConfig("activerecord");
       ActiveRecordStarter.Initialize(typeof(User).Assembly, source);
   }

   void Application_End(object sender, EventArgs e)
   {
       //  Code that runs on application shutdown

   }

   void Application_Error(object sender, EventArgs e)
   {
       // Code that runs when an unhandled error occurs

   }

   void Session_Start(object sender, EventArgs e)
   {
       // Code that runs when a new session is started
       int i = 0;

   }

   void Session_End(object sender, EventArgs e)
   {
       // Code that runs when a session ends.
       // Note: The Session_End event is raised only when the sessionstate mode
       // is set to InProc in the Web.config file. If session mode is
set to StateServer
       // or SQLServer, the event is not raised.

   }

&lt;/script&gt;</value>
    </field>
    <field name="created">
      <value>1145212999000</value>
    </field>
    <field name="updated">
      <value>1162413391000</value>
    </field>
    <field name="reporterName">
      <value>hammett</value>
    </field>
    <field name="updaterName">
      <value>hammett</value>
    </field>
    <field name="resolved">
      <value>1282143406760</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
  </issue>
</issues>