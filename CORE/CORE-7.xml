<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Major</value>
    </field>
    <field name="Type">
      <value>Bug</value>
    </field>
    <field name="State">
      <value>Won't fix</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>Logging</value>
    </field>
    <field name="Fix versions" />
    <field name="Affected versions" />
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>7</value>
    </field>
    <field name="summary">
      <value>Wrong IInvocation.MethodInvocationTarget passed to IInterceptor.Intercept for generic methods with reference type</value>
    </field>
    <field name="description">
      <value>Will trying to understand why I couldn't have automatic transaction management on methods with generic parameters, I realise that, in the case of methods with generic type defined as a reference type, the wrong informations are passed to the interceptors.
It's working well with methods who have generic parameters defined as a value type.

In attachment is a NUnit test fixture that demonstrate this bug.</value>
    </field>
    <field name="created">
      <value>1172786370000</value>
    </field>
    <field name="updated">
      <value>1253855048000</value>
    </field>
    <field name="reporterName">
      <value>dbachmann</value>
    </field>
    <field name="updaterName">
      <value>dbachmann</value>
    </field>
    <field name="resolved">
      <value>1282140362776</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
    <comment author="jonorossi" text="* '''Status''' changed from ''Resolved'' to ''Closed''.&#xD;&#xA;" created="1253855040000" />
  </issue>
</issues>