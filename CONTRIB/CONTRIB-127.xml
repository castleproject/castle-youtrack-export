<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Normal</value>
    </field>
    <field name="Type">
      <value>Bug</value>
    </field>
    <field name="State">
      <value>Fixed</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>ViewEngines</value>
    </field>
    <field name="Fix versions" />
    <field name="Affected versions" />
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>127</value>
    </field>
    <field name="summary">
      <value>AspView: The dictionary types in OutputSubView in AspViewBase and ViewAtDesignTime do not match</value>
    </field>
    <field name="description">
      <value>AspViewBase:
1. protected void OutputSubView(string subViewName, IDictionary parameters)
2. internal void OutputSubView(string subViewName, params object[] arguments)

ViewAtDesignTime 
public void OutputSubView(string subViewName, IDictionary&lt;string, object&gt; parameters)

The problem:
When the view passes an IDictionary&lt;string, object&gt; to OutputSubView in the view the second version of AspVIewBase.OutputSubView will be called because IDictionary&lt;string, object&gt; cannot be cast implicitly to IDictionary. This causes a runtime error ("Parameters should be arranged as key and value pairs").

When the view passes an IDictionary, the code compiles and works at runtime, but VS shows an error because of the missing implicit conversion from IDictionary to IDictionary&lt;string, object&gt;.

Proposed solution:
Either change 
AspViewBase.OutputSubView(string subViewName, TextWriter writer, IDictionary parameters)
(and the respective overload with a TextWriter )
to
AspViewBase.OutputSubView(string subViewName, TextWriter writer, IDictionary&lt;string, object&gt; parameters)

I'd prefer this solution because of the type safety. 

Or change
ViewAtDesignTime.OutputSubView(string subViewName, IDictionary&lt;string, object&gt; parameters)
to
ViewAtDesignTime.OutputSubView(string subViewName, IDictionary parameters)

I added a testcase to clarify the problem.

</value>
    </field>
    <field name="created">
      <value>1210211758000</value>
    </field>
    <field name="updated">
      <value>1213521017000</value>
    </field>
    <field name="reporterName">
      <value>aloker</value>
    </field>
    <field name="updaterName">
      <value>aloker</value>
    </field>
    <field name="resolved">
      <value>1282140093245</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
  </issue>
</issues>