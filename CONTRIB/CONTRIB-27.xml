<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Major</value>
    </field>
    <field name="Type">
      <value>Feature</value>
    </field>
    <field name="State">
      <value>Fixed</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>ActiveWriter</value>
    </field>
    <field name="Fix versions" />
    <field name="Affected versions" />
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>27</value>
    </field>
    <field name="summary">
      <value>Nullable types only when NotNull=false</value>
    </field>
    <field name="description">
      <value>Today, if model is set to use nullables and property type is apt to be nullable, then a nullable type is used.

I suggest that a nullable type be used only if model is set to use nullables, property type is apt to be nullable, *AND property NotNull is false*. 
If I set a property as NotNull=true, then a Nullable type has not much sense.

My proposed patch is attached.
</value>
    </field>
    <field name="created">
      <value>1178604764000</value>
    </field>
    <field name="updated">
      <value>1178693281000</value>
    </field>
    <field name="reporterName">
      <value>rstuven</value>
    </field>
    <field name="updaterName">
      <value>rstuven</value>
    </field>
    <field name="resolved">
      <value>1282138175713</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
  </issue>
</issues>