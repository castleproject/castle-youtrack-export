<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Major</value>
    </field>
    <field name="Type">
      <value>Bug</value>
    </field>
    <field name="State">
      <value>Fixed</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>Validators</value>
    </field>
    <field name="Fix versions" />
    <field name="Affected versions" />
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>125</value>
    </field>
    <field name="summary">
      <value>Cannot use webservices or XmlSerializer on classes derived from ActiveRecordValidationBase because of IDictionary PropertiesValidationErrorMessage</value>
    </field>
    <field name="description">
      <value>Project is derived from ActiveRecordValitationBase&lt;Project&gt;. Adding [XmlIgnore] to PropertiesValidationErrorMessage fixes.

Exception:
System.InvalidOperationException: There was an error reflecting type 'Model.Project'. ---

&gt; System.NotSupportedException: Cannot serialize member Castle.ActiveRecord.ActiveRecordValidationBase

`1[[Model.Project, Model, Version=1.0.0.0, Culture=neutral, PublicKeyToken

=null]].PropertiesValidationErrorMessage of type System.Collections.IDictionary, because it implements

 IDictionary.

   at System.Xml.Serialization.TypeScope.GetDefaultIndexer(Type type, String memberInfo)

   at System.Xml.Serialization.TypeScope.ImportTypeDesc(Type type, MemberInfo memberInfo, Boolean directReference

)

   at System.Xml.Serialization.TypeScope.GetTypeDesc(Type type, MemberInfo source, Boolean directReference

, Boolean throwOnError)

   at System.Xml.Serialization.StructModel.GetPropertyModel(PropertyInfo propertyInfo)

   at System.Xml.Serialization.StructModel.GetFieldModel(MemberInfo memberInfo)

   at System.Xml.Serialization.XmlReflectionImporter.ImportStructLikeMapping(StructModel model, String

 ns, Boolean openModel, XmlAttributes a)

   at System.Xml.Serialization.XmlReflectionImporter.ImportStructLikeMapping(StructModel model, String

 ns, Boolean openModel, XmlAttributes a)

   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext

 context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel)

   --- End of inner exception stack trace ---

   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(TypeModel model, String ns, ImportContext

 context, String dataType, XmlAttributes a, Boolean repeats, Boolean openModel)

   at System.Xml.Serialization.XmlReflectionImporter.ImportElement(TypeModel model, XmlRootAttribute

 root, String defaultNamespace)

   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root

, String defaultNamespace)

   at System.Xml.Serialization.XmlReflectionImporter.ImportTypeMapping(Type type, XmlRootAttribute root

)

   at System.Web.Services.Protocols.XmlReturn.GetInitializers(LogicalMethodInfo[] methodInfos)

   at System.Web.Services.Protocols.XmlReturnWriter.GetInitializers(LogicalMethodInfo[] methodInfos)

   at System.Web.Services.Protocols.MimeFormatter.GetInitializers(Type type, LogicalMethodInfo[] methodInfos

)

   at System.Web.Services.Protocols.HttpServerType..ctor(Type type)

   at System.Web.Services.Protocols.HttpServerProtocol.Initialize()

   at System.Web.Services.Protocols.ServerProtocolFactory.Create(Type type, HttpContext context, HttpRequest

 request, HttpResponse response, Boolean&amp; abortProcessing)</value>
    </field>
    <field name="created">
      <value>1170430373000</value>
    </field>
    <field name="updated">
      <value>1170534549000</value>
    </field>
    <field name="reporterName">
      <value>serkan.hosca</value>
    </field>
    <field name="updaterName">
      <value>serkan.hosca</value>
    </field>
    <field name="resolved">
      <value>1282136276760</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
  </issue>
</issues>