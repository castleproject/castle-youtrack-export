<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Major</value>
    </field>
    <field name="Type">
      <value>Feature</value>
    </field>
    <field name="State">
      <value>Fixed</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>No subsystem</value>
    </field>
    <field name="Fix versions" />
    <field name="Affected versions">
      <value>Future</value>
    </field>
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>207</value>
    </field>
    <field name="summary">
      <value>IValidationProvider common interface for AR models that can be validated</value>
    </field>
    <field name="description">
      <value>This patch provides IValidationProvider, an interface for AR models that can be validated.
This removes a lot of the duplicate logic in ActiveRecordValidationBase(&lt;T&gt;)

ActiveRecordValidator is doing the work of the IValidationProvider. 
ActiveRecordValidationBase, ActiveRecordValidationBase&lt;T&gt; and ActiveRecordHooksValidationBase (new class) all implement IValidtionProvider, and forward those methods/properties to ActiveRecordValidator (you can override this).

Also added ActiveRecordValidationException. And as a bonus, the Scaffold.CommonOperationUtils.SaveInstance() has gotten cleaner.

Also see this thread: http://groups.google.com/group/castle-project-devel/browse_thread/thread/941f78e9abebaf3d?hl=en</value>
    </field>
    <field name="created">
      <value>1204626004000</value>
    </field>
    <field name="updated">
      <value>1209130980000</value>
    </field>
    <field name="reporterName">
      <value>alwin</value>
    </field>
    <field name="updaterName">
      <value>alwin</value>
    </field>
    <field name="resolved">
      <value>1282136664510</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
  </issue>
</issues>