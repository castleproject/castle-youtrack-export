<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Major</value>
    </field>
    <field name="Type">
      <value>Bug</value>
    </field>
    <field name="State">
      <value>Incomplete</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>Framework</value>
    </field>
    <field name="Fix versions" />
    <field name="Affected versions" />
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>158</value>
    </field>
    <field name="summary">
      <value>fails initialize w/ deep joined base and p.morphic assoc</value>
    </field>
    <field name="description">
      <value>This works:

[code]
    public class Entity
    {
        private String _data;

        [Property()]
        public String Data
        {
            get { return _data; }
            set { _data = value; }
        }
    }
    [ActiveRecord("ProductBases"), JoinedBase()]
    public class ProductBase : Entity
    {
        private Int32 _userBaseId;
        private String _userData;
        private ProductItem _parent;

        [PrimaryKey()]
        public Int32 UserBaseId
        {
            get { return _userBaseId; }
            set { _userBaseId = value; }
        }

        [Property()]
        public String UserData
        {
            get { return _userData; }
            set { _userData = value; }
        }

        [BelongsTo()]
        public ProductItem Parent
        {
            get { return _parent; }
            set { _parent = value; }
        }
    }
    [ActiveRecord("ProductItems")]
    public class ProductItem : ProductBase
    {
        private Int32 _customerId;
        private String _customerData;
        private IList&lt;ProductBase&gt; _subProducts;

        [JoinedKey()]
        public Int32 CustomerId
        {
            get { return _customerId; }
            set { _customerId = value; }
        }

        [Property()]
        public String CustomerData
        {
            get { return _customerData; }
            set { _customerData = value; }
        }

        [HasMany()]
        public IList&lt;ProductBase&gt; SubProducts
        {
            get { return _subProducts; }
            set { _subProducts = value; }
        }
    }
[/code]

But this doesn't :

[code]
    [ActiveRecord("Entities"), JoinedBase()]
    public class Entity
    {
        private Int32 _primaryKey;
        private String _data;

        [PrimaryKey()]
        public Int32 PrimaryKey
        {
            get { return _primaryKey; }
            set { _primaryKey = value; }
        }

        [Property()]
        public String Data
        {
            get { return _data; }
            set { _data = value; }
        }
    }
    [ActiveRecord("ProductBases"), JoinedBase()]
    public class ProductBase : EntityA
    {
        private Int32 _userBaseId;
        private String _userData;
        private ProductItem _parent;

        [JoinedKey()]
        public Int32 UserBaseId
        {
            get { return _userBaseId; }
            set { _userBaseId = value; }
        }

        [Property()]
        public String UserData
        {
            get { return _userData; }
            set { _userData = value; }
        }

        [BelongsTo()]
        public ProductItem Parent
        {
            get { return _parent; }
            set { _parent = value; }
        }
    }
    [ActiveRecord("ProductItems")]
    public class ProductItem : ProductBase
    {
        private Int32 _customerId;
        private String _customerData;
        private IList&lt;ProductBase&gt; _subProducts;

        [JoinedKey()]
        public Int32 CustomerId
        {
            get { return _customerId; }
            set { _customerId = value; }
        }

        [Property()]
        public String CustomerData
        {
            get { return _customerData; }
            set { _customerData = value; }
        }

        [HasMany()]
        public IList&lt;ProductBase&gt; SubProducts
        {
            get { return _subProducts; }
            set { _subProducts = value; }
        }
    }   
[/code]

i.e. when entity is required as a joind base I cannot have the association of ProductItems containing many ProductBases. I get this error when I initialize :
Object not set to an instance
at Castle.ActiveRecord.Framework.Internal.XmlGenerationVisitor.WriteCompositeColumns(String[] columns) in c:\ccnet\CastleWorkDir\WorkingDirectory\ActiveRecord\Castle.ActiveRecord\Framework\Internal\Visitors\XmlGenerationVisitor.cs:line 1041 

I have been advised that this is a bug http://forum.castleproject.org/viewtopic.php?t=2843

Unable to create a patch myself, sorry.</value>
    </field>
    <field name="created">
      <value>1179906018000</value>
    </field>
    <field name="updated">
      <value>1186925309000</value>
    </field>
    <field name="reporterName">
      <value>adam_b</value>
    </field>
    <field name="updaterName">
      <value>adam_b</value>
    </field>
    <field name="resolved">
      <value>1282136351932</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
  </issue>
</issues>