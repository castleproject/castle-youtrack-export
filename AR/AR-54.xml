<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Major</value>
    </field>
    <field name="Type">
      <value>Feature</value>
    </field>
    <field name="State">
      <value>Won't fix</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>Framework</value>
    </field>
    <field name="Fix versions" />
    <field name="Affected versions" />
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>54</value>
    </field>
    <field name="summary">
      <value>OneToOne should be named HasOne</value>
    </field>
    <field name="description">
      <value>The OneToOne attribute breaks the naming convention: HasMany, HasAndBelongsToMany, BelongsTo... and OneToOne!!
Plus it's the only one not beeing named like RoR's, see http://api.rubyonrails.com/classes/ActiveRecord/Associations/ClassMethods.html

I think OneToOne should be marked as obsolete and be replaced by HasOne.</value>
    </field>
    <field name="created">
      <value>1148542062000</value>
    </field>
    <field name="updated">
      <value>1162410676000</value>
    </field>
    <field name="reporterName">
      <value>macournoyer</value>
    </field>
    <field name="updaterName">
      <value>macournoyer</value>
    </field>
    <field name="resolved">
      <value>1282135950166</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
  </issue>
</issues>