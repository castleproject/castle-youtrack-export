<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Critical</value>
    </field>
    <field name="Type">
      <value>Bug</value>
    </field>
    <field name="State">
      <value>Fixed</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>No subsystem</value>
    </field>
    <field name="Fix versions">
      <value>RC 3</value>
    </field>
    <field name="Affected versions">
      <value>RC 3</value>
    </field>
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>33</value>
    </field>
    <field name="summary">
      <value>Exception stack trace is lost when intercepting calls on MarshalByRefObject</value>
    </field>
    <field name="description">
      <value>The offending code is located on the Proceed() method, around line 111:

	IMethodReturnMessage retMessage = RemotingServices.ExecuteMessage(proxy, methodCall);
	if (retMessage.Exception != null)
	{
		throw retMessage.Exception;
	}

In order not to lose the valuable stack trace, the only solution I've found is to encapsulate the exception and then throw, maybe in a TargetInvocationException.</value>
    </field>
    <field name="created">
      <value>1161245250000</value>
    </field>
    <field name="updated">
      <value>1283220853104</value>
    </field>
    <field name="reporterName">
      <value>fabio</value>
    </field>
    <field name="updaterName">
      <value>xtoff</value>
    </field>
    <field name="resolved">
      <value>1282141772120</value>
    </field>
    <field name="watcherName">
      <value>User: id = 20-18[up-to-date]</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
  </issue>
</issues>