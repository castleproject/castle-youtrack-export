<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Major</value>
    </field>
    <field name="Type">
      <value>Bug</value>
    </field>
    <field name="State">
      <value>Fixed</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>No subsystem</value>
    </field>
    <field name="Fix versions">
      <value>RC 4</value>
    </field>
    <field name="Affected versions">
      <value>RC 4</value>
    </field>
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>48</value>
    </field>
    <field name="summary">
      <value>Problem intercepting multi-interface component with Windsor / DP2</value>
    </field>
    <field name="description">
      <value>The problem arises when:
- Using a multi-interface component registered in the container only by the first interface
- Request the component from the container.
- Cast the proxy received to the second interface implemented by the component.
- Call a method of the second interface. The 'invocation' object will contain an InvocationTarget == Proxy, and throw a NotSupportedException.

Works fine in Windsor / DP1 ... not with Windsor / DP2. Don't know if it's a problem from Windsor or DP2 ...
Quick &amp; Dirty code attached to show the problem.
</value>
    </field>
    <field name="created">
      <value>1166669644000</value>
    </field>
    <field name="updated">
      <value>1283220853135</value>
    </field>
    <field name="reporterName">
      <value>stiiifff</value>
    </field>
    <field name="updaterName">
      <value>xtoff</value>
    </field>
    <field name="resolved">
      <value>1282141865057</value>
    </field>
    <field name="watcherName">
      <value>User: id = 20-18[up-to-date]</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
  </issue>
</issues>