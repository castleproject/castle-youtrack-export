<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Normal</value>
    </field>
    <field name="Type">
      <value>Bug</value>
    </field>
    <field name="State">
      <value>Fixed</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>No subsystem</value>
    </field>
    <field name="Fix versions" />
    <field name="Affected versions" />
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>192</value>
    </field>
    <field name="summary">
      <value>Circular reference causes component ctor to be called twice on a singleton</value>
    </field>
    <field name="description">
      <value>Affects Windsor 2.1.

IWindsorContainer k = new WindsorContainer();
k.AddComponentLifeStyle&lt;C&gt;(LifestyleType.Singleton);
k.AddComponentLifeStyle&lt;E&gt;(LifestyleType.Singleton);
k.Resolve&lt;C&gt;();

    public class C
    {
        public C()
        {
            Trace.WriteLine("ctor");
        }

        public E E { get; set; }
    }

    public class E
    {
        public E(C c)
        {
        }
    }</value>
    </field>
    <field name="created">
      <value>1264610562000</value>
    </field>
    <field name="updated">
      <value>1273852068000</value>
    </field>
    <field name="reporterName">
      <value>bling</value>
    </field>
    <field name="updaterName">
      <value>bling</value>
    </field>
    <field name="resolved">
      <value>1273852020000</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
    <comment author="agiorgetti" text="I've faced this same problem yesterday night, I checked the source code a bit and   I think it's due to how the SingletonLifestyleManager works togheter with the default component activator:&#xA;basically what happens is this: to be fully constructuced the 'C' instance must have all its dependency resolved (even the optional ones) before its instance is saved as signleton, but 'E' requires an instance of 'C' so to fully construct 'E' windsor ask the lifestylemanager to return the singleton instance, but since it's  not saved yet another one gets created.&#xA;We end up having 2 instance for the same singleton object (with the one generated by 'E' beeing a ghost/wrong instance).&#xA;My workaround was to build another SingletonLifestyleManager that works toghether with another Component activator, in this workaround the singleton instance is saved before the optional properties are resolved.&#xA;&#xA;However I have to fully investigate the side effect that this one can have." created="1271983837000" />
    <comment author="xtoff" text="Alessandro,&#xA;&#xA;I have a simpler implementation :)&#xA;Not pushed to main repository yet as I have some more work to do on it first. I want to make the changes play nice with some other things that I want to add hence it will need some more work." created="1271989437000" />
    <comment author="agiorgetti" text="Cool, awaiting to see it :D" created="1271992769000" />
    <comment author="xtoff" text="* '''Status''' changed from ''Open'' to ''Work Started''.&#xD;&#xA;" created="1271942460000" />
    <comment author="agiorgetti" text="* '''Attachment''' CustomSingletonLifestyle.zip added.&#xD;&#xA;" created="1271983800000" />
    <comment author="xtoff" text="* '''Resolution''' set to ''Fixed''.&#xD;&#xA;* '''Status''' changed from ''Work Started'' to ''Resolved''.&#xD;&#xA;" created="1273852020000" />
    <comment author="xtoff" text="* '''Status''' changed from ''Resolved'' to ''Closed''.&#xD;&#xA;" created="1273852020000" />
  </issue>
</issues>