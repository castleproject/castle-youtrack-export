<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Major</value>
    </field>
    <field name="Type">
      <value>Bug</value>
    </field>
    <field name="State">
      <value>Won't fix</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>No subsystem</value>
    </field>
    <field name="Fix versions" />
    <field name="Affected versions" />
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>143</value>
    </field>
    <field name="summary">
      <value>Interceptor does not work as expected</value>
    </field>
    <field name="description">
      <value>I have a code like below

[CODE]

    class Program
    {
        static void Main(string[] args)
        {
            WindsorContainer container = new WindsorContainer();
            container.AddComponent("ServiceA", typeof(IServiceA), typeof(ServiceA));
            container.AddComponent("interceptorA", typeof(ServiceAInterceptor));
            IHandler handler = container.Kernel.GetHandler(typeof(IServiceA));
            handler.ComponentModel.Interceptors.Add(new InterceptorReference("interceptorA"));

            IServiceA serviceA = container.Resolve&lt;IServiceA&gt;();
            serviceA.Method1();

            Console.ReadLine();
        }
    }

    public interface IServiceA
    {
        void Method1();
        void Method2();
    }

    public class ServiceA : IServiceA
    {
        public ServiceA()
        {

        }

        public void Method1()
        {
            Console.WriteLine("Method1 called");

            Method2();
        }

        public void Method2()
        {
            Console.WriteLine("Method2 called");
        }
    }

    public class ServiceAInterceptor : IInterceptor
    {
        public void Intercept(IInvocation invocation)
        {
            Console.WriteLine("Intercept: " + invocation.Method.Name);
            invocation.Proceed();
        }
    }

[/CODE]

Result:

Intercept: Method1
Method1 called
Method2 called (The interceptor does know if Method2 is called by Method1)

Even I mark virtual on both methods, it does not work too.</value>
    </field>
    <field name="created">
      <value>1233707548000</value>
    </field>
    <field name="updated">
      <value>1283220838854</value>
    </field>
    <field name="reporterName">
      <value>sakura80</value>
    </field>
    <field name="updaterName">
      <value>xtoff</value>
    </field>
    <field name="resolved">
      <value>1233707820000</value>
    </field>
    <field name="watcherName">
      <value>User: id = 20-18[up-to-date]</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
    <comment author="ayenderahien" text="When you use an interface proxy, the kernel will hand the calling code an interface that is proxied to call the interceptor.&#xA;when the actual class make the call, you are not going through the intercepting proxy, because you already passed it." created="1233707831000" />
    <comment author="sakura80" text="You are right, it works when service type is a class. It means there is no way to get it work if service type is an interface :(&#xA;&#xA;Thank you for your quick answer!" created="1233708865000" />
    <comment author="ayenderahien" text="* '''Resolution''' set to ''By Design''.&#xD;&#xA;* '''Status''' changed from ''Open'' to ''Resolved''.&#xD;&#xA;" created="1233707820000" />
    <comment author="ayenderahien" text="* '''Status''' changed from ''Resolved'' to ''Closed''.&#xD;&#xA;" created="1241441940000" />
  </issue>
</issues>