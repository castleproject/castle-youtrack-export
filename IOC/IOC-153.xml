<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Normal</value>
    </field>
    <field name="Type">
      <value>Bug</value>
    </field>
    <field name="State">
      <value>Won't fix</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>No subsystem</value>
    </field>
    <field name="Fix versions">
      <value>Future</value>
    </field>
    <field name="Affected versions" />
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>153</value>
    </field>
    <field name="summary">
      <value>Logger facility can cause activation error when using abstract factory methods</value>
    </field>
    <field name="description">
      <value>Posted on the mailing list too: http://groups.google.com/group/castle-project-devel/browse_thread/thread/19cf784fb8f61c4f

It seems that the logger facility analyzes components at registration and decides when and how to inject loggers at this point. 

The problem occurs if you are using a factory method without an ImplementedBy clause (for example an abstract factory).  In this case the logging facility does not inject the logger because the specific type is not known at registration time.  What probably should be occurring is that in this case the decision to inject a logger should be happening when the component is created. 

Another problem is that registration CAN use an ImplementedBy clause with a factory method in which case the logger is injected fine. However just because an ImplementedBy clause is used doesn't mean that this is necessarily the type the factory returns.  As a matter of fact as pointed out in this thread here: 
http://groups.google.com/group/castle-project-devel/browse_thread/thr... 
an ImplementedBy clause when a factory method is used doesn't really 
do anything at all. So what happens if an ImplementedBy clause specifies a logging type but the actual component returned from the factory method doesn't have an ILogger property?  ActivationError. 
</value>
    </field>
    <field name="created">
      <value>1243342956000</value>
    </field>
    <field name="updated">
      <value>1263625144000</value>
    </field>
    <field name="reporterName">
      <value>togakangaroo</value>
    </field>
    <field name="updaterName">
      <value>togakangaroo</value>
    </field>
    <field name="resolved">
      <value>1263625140000</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
    <comment author="xtoff" text="Can we get a test case?" created="1261148049000" />
    <comment author="togakangaroo" text="see uploaded zip.  Also this here: http://pastebin.com/f67e501e9" created="1262528747000" />
    <comment author="xtoff" text="added first patch which changes factory support facility to ensure that the type returned by factory is compatible with type registered as service implementation.&#xA;In this case, when we have component for Pet with impl. Cat and factory returns a Dog, it will throw.&#xA;&#xA;That 'solves' or rather specifies further the behavior of the facility.&#xA;&#xA;As for the logger itself, I'll provide another patch.&#xA;&#xA;The patch provided has spaces instead of tabs, and probably other formatting glitches so please mind that when applying." created="1262658397000" />
    <comment author="jonorossi" text="Reverted r6595, r6596 and r6653 (I kept the formatting clean up changes)." created="1263357266000" />
    <comment author="xtoff" text="* '''Attachment''' factory.patch added.&#xD;&#xA;" created="1262658180000" />
    <comment author="xtoff" text="* '''Resolution''' set to ''By Design''.&#xD;&#xA;* '''Version Fixed''' set to ''Future''.&#xD;&#xA;* '''Status''' changed from ''Open'' to ''Resolved''.&#xD;&#xA;" created="1263625140000" />
    <comment author="xtoff" text="* '''Status''' changed from ''Resolved'' to ''Closed''.&#xD;&#xA;" created="1263625140000" />
  </issue>
</issues>