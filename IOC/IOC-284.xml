<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Normal</value>
    </field>
    <field name="Type">
      <value>Usability Problem</value>
    </field>
    <field name="State">
      <value>Fixed</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>Registration API</value>
    </field>
    <field name="Fix versions">
      <value>3.0</value>
    </field>
    <field name="Affected versions">
      <value>2.5.3</value>
    </field>
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>284</value>
    </field>
    <field name="summary">
      <value>Optimize fluent registration API for less typing</value>
    </field>
    <field name="description">
      <value>What that means basically is with refactoring tools and intellisense (and ReSharper) the quicker we can point intellisense to right member the better. This means we also should have less dots in the API.

So things like

{code lang=java}
LifeStyle.Transient
{code}

should be simplified to 

{code lang=java}
LifestyleTransient()
{code}

because the latter can be reached with less keystrokes. That's just an example and there are many places in the API that could benefit from that.</value>
    </field>
    <field name="created">
      <value>1302089517459</value>
    </field>
    <field name="updated">
      <value>1407822257284</value>
    </field>
    <field name="reporterName">
      <value>xtoff</value>
    </field>
    <field name="updaterName">
      <value>jonorossi</value>
    </field>
    <field name="resolved">
      <value>1311078740744</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
    <comment author="xtoff" text="Usage for not only {{DependsOn}} but also {{ExtendedProperties}} methods should be taken into account" created="1302532226302" />
  </issue>
</issues>