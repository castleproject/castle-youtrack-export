<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Normal</value>
    </field>
    <field name="Type">
      <value>Feature</value>
    </field>
    <field name="State">
      <value>Fixed</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>No subsystem</value>
    </field>
    <field name="Fix versions" />
    <field name="Affected versions" />
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>268</value>
    </field>
    <field name="summary">
      <value>Hook that allows for filtering handlers during ResolveAll</value>
    </field>
    <field name="description">
      <value>When ResolveAll is called, there is currently no way of filtering and ordering handlers before they are invoked.

A nice feature would be a hook, somewhat similar to IHandlerSelector, that would allow for the resolved handlers to be filtered and ordered.

This hook would e.g. allow for ordering and filtering collections injected by the CollectionResolver, making implementing chain-of-responsibility-like scenarios even sweeter.</value>
    </field>
    <field name="created">
      <value>1295609353452</value>
    </field>
    <field name="updated">
      <value>1295785213658</value>
    </field>
    <field name="reporterName">
      <value>Mogens.Heller.Grabe</value>
    </field>
    <field name="updaterName">
      <value>xtoff</value>
    </field>
    <field name="resolved">
      <value>1295785213658</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
  </issue>
</issues>