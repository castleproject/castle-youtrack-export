<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Major</value>
    </field>
    <field name="Type">
      <value>Feature</value>
    </field>
    <field name="State">
      <value>Fixed</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>No subsystem</value>
    </field>
    <field name="Fix versions">
      <value>RC 3</value>
    </field>
    <field name="Affected versions">
      <value>RC 2</value>
    </field>
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>24</value>
    </field>
    <field name="summary">
      <value>Allow user to provide an attribute which will customize how to inspect properties (PropertiesDependenciesModelInspector)</value>
    </field>
    <field name="description">
      <value>The way it works today the bindingflags is fixed to BindingFlags.Public|BindingFlags.Instance

We could for example allow the use to specify 

inspectProperties="none"
inspectProperties="allHierarchy" --&gt; default
inspectProperties="thisTypeOnly" --&gt; which will use BindingFlags.Public|BindingFlags.DeclaredOnly

The rationale: when you register a Form or a WebForm you have plenty of properties that you usually won't care about. But there's no way to the PropertiesDependenciesModelInspector to know that.</value>
    </field>
    <field name="created">
      <value>1145518067000</value>
    </field>
    <field name="updated">
      <value>1283220838885</value>
    </field>
    <field name="reporterName">
      <value>hammett</value>
    </field>
    <field name="updaterName">
      <value>xtoff</value>
    </field>
    <field name="resolved">
      <value>1282141672620</value>
    </field>
    <field name="watcherName">
      <value>User: id = 20-18[up-to-date]</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
  </issue>
</issues>