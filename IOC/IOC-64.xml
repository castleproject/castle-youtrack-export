<?xml version="1.0" encoding="utf-8"?>
<issues>
  <issue>
    <field name="Priority">
      <value>Major</value>
    </field>
    <field name="Type">
      <value>Bug</value>
    </field>
    <field name="State">
      <value>Fixed</value>
    </field>
    <field name="Assignee" />
    <field name="Subsystem">
      <value>No subsystem</value>
    </field>
    <field name="Fix versions" />
    <field name="Affected versions">
      <value>RC 3</value>
    </field>
    <field name="Fixed in build" />
    <field name="numberInProject">
      <value>64</value>
    </field>
    <field name="summary">
      <value>ComponentConverter Incorrectly Overrides User Conversions</value>
    </field>
    <field name="description">
      <value>I register a custom type converter (my own type converter) with the container.

The type converter handles types that are registered as services (there's a component that's registered with that type)

The problem is: the built-in type converter "ComponentConverter" (which has higher priority than the custom type converter because the default converter simply iterates through the converters collection) only inspects the "Type" for conversion and attempts to handle the conversion - which obviously he can't (I'm trying to "inline" a parameter using an xml fragment).

The following code change can solve this problem:

Instead of:
public override bool CanHandleType(Type type)
      {
         if (Context.Kernel == null) return false;

         return Context.Kernel.HasComponent(type);
      }

Use:

public override bool CanHandleType(Type type, IConfiguration configuration)
       {
                        if (Context.Kernel == null) return false;

         return Context.Kernel.HasComponent(type) &amp;&amp; ReferenceExpressionUtil.IsReference(value);
       } 

</value>
    </field>
    <field name="created">
      <value>1170930057000</value>
    </field>
    <field name="updated">
      <value>1174693653000</value>
    </field>
    <field name="reporterName">
      <value>atiasnir</value>
    </field>
    <field name="updaterName">
      <value>atiasnir</value>
    </field>
    <field name="resolved">
      <value>1282142001854</value>
    </field>
    <field name="permittedGroup">
      <value>All Users</value>
    </field>
  </issue>
</issues>